version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: veilsupport
      POSTGRES_PASSWORD: veilsupport_dev_password
      POSTGRES_DB: veilsupport
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U veilsupport"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # XMPP server (prosody) - will be configured in later phases
  prosody:
    image: prosody/prosody:0.12-alpine
    ports:
      - "5222:5222"  # XMPP client-to-server
      - "5269:5269"  # XMPP server-to-server
    volumes:
      - prosody_data:/var/lib/prosody
      - prosody_config:/etc/prosody
    environment:
      - LOCAL=localhost
      - DOMAIN=localhost
      - PASSWORD=prosody_admin_password
    depends_on:
      - postgres
    profiles:
      - xmpp  # Only start with --profile xmpp

  # VeilSupport application - will be updated in later phases
  veilsupport:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - VEILSUPPORT_DATABASE_HOST=postgres
      - VEILSUPPORT_DATABASE_PASSWORD=veilsupport_dev_password
      - VEILSUPPORT_REDIS_URL=redis://redis:6379
      - VEILSUPPORT_XMPP_SERVER=prosody:5222
      - VEILSUPPORT_JWT_SECRET=dev_jwt_secret_key_not_for_production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - app  # Only start with --profile app

volumes:
  postgres_data:
  redis_data:
  prosody_data:
  prosody_config: